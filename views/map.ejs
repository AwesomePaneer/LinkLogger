<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= short_link %>
    </title>
    <link type="text/css" rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        #mapid {
            height: 450px;
            width: 45%;
            display: inline-flexbox;
        }

        .chart-container {
            display: inline-flexbox;
        }

        #clickChart {
            height: 350px !important;
            width: 50% !important;
        }

        #OSChart {
            height: 350px !important;
            width: 50% !important;
        }

        #browserChart {
            height: 350px !important;
            width: 50% !important;
        }
    </style>
</head>

<body>
    <h1>Analytics for <%= short_link %>
    </h1>
    <!-- Backend Data for testing -->
    <h3>
        <%= JSON.stringify(linkTime) %>
    </h3>
    <h3>
        <%= JSON.stringify(linkBrowser) %>
    </h3>
    <h3>
        <%= JSON.stringify(linkOS) %>
    </h3>
    <!-- Separate divs for Map and Charts -->
    <div id="mapid"></div>
    <div class="chart-container"><canvas id="clickChart"></canvas></div>
    <div class="chart-container"><canvas id="OSChart"></canvas></div>
    <div class="chart-container"><canvas id="browserChart"></canvas></div>

    <!-- Scripts for Map -->
    <script src="https://unpkg.com/leaflet/dist/leaflet-src.js"></script>
    <script src="https://unpkg.com/leaflet.heat@0.2.0/dist/leaflet-heat.js"></script>
    <!-- Scripts for Charts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
    <!-- Main Script for Rendering Objects -->
    <script>
    // Map render starts here
    const mymap = L.map('mapid').setView([28.5457, 77.1928], 4);
        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 11,
            id: 'mapbox/streets-v11',
            tileSize: 512,
            zoomOffset: -1,
            accessToken: 'pk.eyJ1Ijoia2FydGlrcmFzdG9naTU3IiwiYSI6ImNrcnFxYTBhazAxNmoydm5wd3Y0NjlhbmUifQ.eTuAk93V5hIA--zlL4ZWQA'
        }).addTo(mymap);

    <% coordinates.forEach(LatLon => { %>
            L.heatLayer(
                [[<%= LatLon[0] %>,<%= LatLon[1] %>, 14]],
                { radius: 25 },
                { 0.4: 'blue', 0.65: 'lime', 1: 'red' },
                { minOpacity: 0.4 }
            ).addTo(mymap);
    <% }) %>

    const markerOptions = {
        opacity: 0.5,
        riseOnHover: true,
    }
    const marker = L.marker([28.5457, 77.1928], markerOptions).addTo(mymap);

    marker.bindPopup("<b>Our Campus!</b><br>Have you seen it? :(").openPopup();
    const popup = L.popup();

    function onMapClick(e) {
        popup
            .setLatLng(e.latlng)
            .setContent(e.latlng.toString())
            .openOn(mymap);
    }
    mymap.on('click', onMapClick);
    // Map render ends here
    // Click-time chart render starts here
    const ctxTime = document.getElementById('clickChart').getContext('2d');

    const timeChart = new Chart(ctxTime, {
        type: 'line',
        maintainAspectRatio: false,
        responsive: true,
        data: {
            datasets: [{
                label: 'Visits',
                // fill: false,
                labelSize: 8,
                backgroundColor: "rgba(255, 166, 0, 0.3)",
                borderColor: "rgba(255, 166, 0, 1)",
                borderWidth: 8,
                pointBackgroundColor: "#bc5090",
                pointBorderColor: "rgba(41, 128, 185, 0)",
                pointRadius: 6,
                pointHoverRadius: 8,
                data: [
                <% const timeKeys = Object.keys(linkTime) %>
                <% timeKeys.forEach(timeKey => { %>
                {
                    t: "<%= timeKey %>",
                    y: <%= linkTime[timeKey] %>   
                    },
                <% }) %>
                ],
            }],
        },
        options: {
            responsive: true,
            scales: {
                xAxes: [{
                    type: 'time',
                    time: {
                        unit: 'hour',
                    },
                    ticks: {
                        fontSize: 24,
                    },
                }],
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        fontSize: 24,
                    },
                }],
            },
            legend: {
                display: true,
                labels: {
                    fontSize: 28
                },
            },
            tooltips: {
                titleFontSize: 24,
                bodyFontSize: 26,
            }
        },
    });
    // Click-time chart render ends here
    // OS chart render starts here
    const ctxOS = document.getElementById("OSChart").getContext("2d");
    const OSChart = new Chart(ctxOS, {
        type: "polarArea",
        data: {
            <% const OSKeys = Object.keys(linkOS) %>

            labels: [
                <% OSKeys.forEach(OSKey => { %>
                    "<%= OSKey %>",
                <% }) %>
            ],
            datasets: [{
                backgroundColor: [
                "#2ecc71",
                "#3498db",
                "#9b59b6",
                "#f1c40f",
                "#e74c3c",
                "#95a5a6",
                "#34495e"
                ],
                data: [
                <% OSKeys.forEach(OSKey => { %>
                    <%= linkOS[OSKey] %>,
                <% }) %>
                ],
            }]
        },
        options: {
            responsive: true,
            scale: {
                ticks: {
                    fontSize: 24,
                },
            },
            legend: {
                display: true,
                labels: {
                    fontSize: 28
                },
            },
            tooltips: {
                titleFontSize: 24,
                bodyFontSize: 26,
            }
        },
    });
    // OS chart render ends here
    // Browser chart render starts here
    const ctxBrowser = document.getElementById("browserChart").getContext("2d");
    const browserChart = new Chart(ctxBrowser, {
        type: "polarArea",
        data: {
            <% const browserKeys = Object.keys(linkBrowser) %>

            labels: [
                <% browserKeys.forEach(browserKey => { %>
                    "<%= browserKey %>",
                <% }) %>
            ],
            datasets: [{
                backgroundColor: [
                "#2ecc71",
                "#3498db",
                "#9b59b6",
                "#f1c40f",
                "#e74c3c",
                "#95a5a6",
                "#34495e"
                ],
                data: [
                <% browserKeys.forEach(browserKey => { %>
                    <%= linkBrowser[browserKey] %>,
                <% }) %>
                ],
            }]
        },
        options: {
            responsive: true,
            scale: {
                ticks: {
                    fontSize: 24,
                },
            },
            legend: {
                display: true,
                labels: {
                    fontSize: 28
                },
            },
            tooltips: {
                titleFontSize: 24,
                bodyFontSize: 26,
            }
        },
    });
    // Browser chart render ends here
    </script>

</body>

</html>